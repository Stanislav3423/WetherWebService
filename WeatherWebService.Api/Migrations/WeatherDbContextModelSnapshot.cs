// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherWebService.Api.NewModels;

#nullable disable

namespace WeatherWebService.Api.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    partial class WeatherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherWebService.Api.NewModels.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10, 3)")
                        .HasColumnName("latitude");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(10, 3)")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("name");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("region_id");

                    b.HasKey("Id")
                        .HasName("PK__cities__3213E83FDBFBDEF4");

                    b.HasIndex("RegionId");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.Observation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Humidity")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("humidity");

                    b.Property<DateTime?>("ObservationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("observation_date");

                    b.Property<decimal?>("Precipitation")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("precipitation");

                    b.Property<int?>("PrecipitationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("precipitation_type_id");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("station_id");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("temperature");

                    b.Property<decimal?>("WindSpeed")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("wind_speed");

                    b.HasKey("Id")
                        .HasName("PK__observat__3213E83F8D9ECA23");

                    b.HasIndex("PrecipitationTypeId");

                    b.HasIndex("StationId");

                    b.ToTable("observations", (string)null);
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.PrecipitationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("type_name");

                    b.HasKey("Id")
                        .HasName("PK__precipit__3213E83F7BFC1739");

                    b.ToTable("precipitation_types", (string)null);
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__regions__3213E83F9DACBC9D");

                    b.ToTable("regions", (string)null);
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.WeatherStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<DateOnly?>("InstallationDate")
                        .HasColumnType("date")
                        .HasColumnName("installation_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__weather___3213E83FD8E525F1");

                    b.HasIndex("CityId");

                    b.ToTable("weather_stations", (string)null);
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.City", b =>
                {
                    b.HasOne("WeatherWebService.Api.NewModels.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__cities__region_i__398D8EEE");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.Observation", b =>
                {
                    b.HasOne("WeatherWebService.Api.NewModels.PrecipitationType", "PrecipitationType")
                        .WithMany("Observations")
                        .HasForeignKey("PrecipitationTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__observati__preci__47DBAE45");

                    b.HasOne("WeatherWebService.Api.NewModels.WeatherStation", "Station")
                        .WithMany("Observations")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__observati__stati__46E78A0C");

                    b.Navigation("PrecipitationType");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.WeatherStation", b =>
                {
                    b.HasOne("WeatherWebService.Api.NewModels.City", "City")
                        .WithMany("WeatherStations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__weather_s__city___3C69FB99");

                    b.Navigation("City");
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.City", b =>
                {
                    b.Navigation("WeatherStations");
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.PrecipitationType", b =>
                {
                    b.Navigation("Observations");
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.Region", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("WeatherWebService.Api.NewModels.WeatherStation", b =>
                {
                    b.Navigation("Observations");
                });
#pragma warning restore 612, 618
        }
    }
}
